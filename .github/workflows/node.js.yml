# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  workflow_dispatch:
     inputs:
      base_url:
       description: 'baseUrl'
       required: false
       default: 'https://jsonplaceholder.typicode.com/todos/1'

  push:
    branches: [ master, node-sample-project, Test-cache]
    
  pull_request:
    branches: [ master ]
    types: [opened]

  
  schedule:
    - cron: '0 09 * * 1-5'

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 5


    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
       node-version: '14'
       cache: npm
 
 
#       uses: actions/setup-node@v2
#       with:
#         node-version: ${{ matrix.node-version }}
    
#     - name: Get npm cache directory
#       id: myCacheStep

#       uses: actions/cache@v2
#       with:
#         path: node_modules
#         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#         restore-keys: |
#           ${{ runner.os }}-node-
          
          
#     - name: Install dependency 
#       if: steps.myCacheStep.outputs.cache-hit != 'true'
#       run: |
#          # Dependencies have changed -- Installing dependencies
#          npm ci  
         
    - name: Run Tests
      run: |
       if [ "${{ github.event.inputs.base_url }}" != '' ]; then
           BASEURL=${{ github.event.inputs.base_url }} mocha test/*.js
       else
          npm test
        fi
    
    - name: Generate allure report and upload to secure server
      if: ${{ always() }}
      run: |
        # Generate allure report and upload to secure server
        ./node_modules/.bin/allure generate allure-results --clean -o allure-report        
        chmod 400 .secrets/report.ssh
        sh uploadSecurely.sh

